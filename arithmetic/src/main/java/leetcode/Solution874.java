package leetcode;

public class Solution874 {
    public static int robotSim(int[] commands, int[][] obstacles) {
        if (commands == null || commands.length == 0) {
            return 0;
        }
        int x = 0;
        int y = 0;
        int ox = 0;
        int oy = 0;
        int direct = 0;
        int[][] e = {{0,1},{-1,0},{0,-1},{1,0}};
        int max = 0;

        for (int i=0 ;i < commands.length ; i++) {
            if (commands[i] == -2) {
                direct ++;
                continue;
            }
            if (commands[i] == -1) {
                direct --;
                continue;
            }
            int pos = direct % e.length < 0 ? direct % e.length + e.length : direct % e.length;
            int[] dir = e[pos];
            if (commands[i] >  0 ) {
                x = ox +  dir[0] * commands[i];
                y = oy +  dir[1] * commands[i];
            }
//            int[] commands = {7,-2,-2,7,5};
//            int[][] obstacles = {{-3,2},{-2,1},{0,1},{-2,4},{-1,0},{-2,-3},{0,-3},{4,4},{-3,3},{2,2}};

            for (int j = 0 ; j < obstacles.length; j ++) {
                if (dir[1] == -1 && obstacles[j][0] == x && oy > obstacles[j][1] && y <= obstacles[j][1]) {
                    y =  1 + obstacles[j][1];
                    System.out.println("-Y方向,(x,y)" + "("+x+","+y+") ,obstacles:["+obstacles[j][0]+","+obstacles[j][1]+"]");
                }
                if (dir[1] == 1 && obstacles[j][0] == x && oy < obstacles[j][1] && y >= obstacles[j][1]) {
                    y = -1 + obstacles[j][1];
                    System.out.println("+Y方向,(x,y)" + "("+x+","+y+") ,obstacles:["+obstacles[j][0]+","+obstacles[j][1]+"]");
                }
                if (dir[0] == -1 && obstacles[j][1] == y && ox > obstacles[j][0] && x <= obstacles[j][0]) {
                    x=  1 + obstacles[j][0];
                    System.out.println("-X方向,(x,y)" + "("+x+","+y+") ,obstacles:["+obstacles[j][0]+","+obstacles[j][1]+"]");
                }
                if (dir[0] == 1 && obstacles[j][1] == y && ox < obstacles[j][0] && x >= obstacles[j][0]) {
                    x=  -1 + obstacles[j][0];
                    System.out.println("+X方向,(x,y)" + "("+x+","+y+") ,obstacles:["+obstacles[j][0]+","+obstacles[j][1]+"]");
                }
            }
            ox = x;
            oy = y;

            max = Math.max(max,x * x + y * y);

        }
        return max;


    }


    public static void main(String[] args) {
        int[] commands = {2,-1,-1,-1,-2,1,7,-2,9,2,3,-1,4,9,7,7,2,4,2,-2,1,5,8,-2,-2,4,2,9,7,5,5,-2,2,2,1,-1,-1,1,6,6,-1,7,-1,7,1,8,2,-1,8,7,-1,2,-2,2,2,4,9,-1,4,-1,-2,8,-1,3,6,-2,7,-2,6,7,9,6,-2,-1,3,6,2,8,6,6,-2,-2,4,2,4,1,2,2,2,8,6,4,6,7,-1,1,-2,-1,-1,7};
        //int[][] obstacles = {{-57,-58},{-72,91},{-55,35},{-20,29},{51,70},{-61,88},{-62,99},{52,17},{-75,-32},{91,-22},{54,33},{-45,-59},{47,-48},{53,-98},{-91,83},{81,12},{-34,-90},{-79,-82},{-15,-86},{-24,66},{-35,35},{3,31},{87,93},{2,-19},{87,-93},{24,-10},{84,-53},{86,87},{-88,-18},{-51,89},{96,66},{-77,-94},{-39,-1},{89,51},{-23,-72},{27,24},{53,-80},{52,-33},{32,4},{78,-55},{-25,18},{-23,47},{79,-5},{-23,-22},{14,-25},{-11,69},{63,36},{35,-99},{-24,82},{-29,-98},{-50,-70},{72,95},{80,80},{-68,-40},{65,70},{-92,78},{-45,-63},{1,34},{81,50},{14,91},{-77,-54},{13,-88},{24,37},{-12,59},{-48,-62},{57,-22},{-8,85},{48,71},{12,1},{-20,36},{-32,-14},{39,46},{-41,75},{13,-23},{98,10},{-88,64},{50,37},{-95,-32},{46,-91},{10,79},{-11,43},{-94,98},{79,42},{51,71},{4,-30},{2,74},{4,10},{61,98},{57,98},{46,43},{-16,72},{53,-69},{54,-96},{22,0},{-7,92},{-69,80},{68,-73},{-24,-92},{-21,82},{32,-1},{-6,16},{15,-29},{70,-66},{-85,80},{50,-3},{6,13},{-30,-98},{-30,59},{-67,40},{17,72},{79,82},{89,-100},{2,79},{-95,-46},{17,68},{-46,81},{-5,-57},{7,58},{-42,68},{19,-95},{-17,-76},{81,-86},{79,78},{-82,-67},{6,0},{35,-16},{98,83},{-81,100},{-11,46},{-21,-38},{-30,-41},{86,18},{-68,6},{80,75},{-96,-44},{-19,66},{21,84},{-56,-64},{39,-15},{0,45},{-81,-54},{-66,-93},{-4,2},{-42,-67},{-15,-33},{1,-32},{-74,-24},{7,18},{-62,84},{19,61},{39,79},{60,-98},{-76,45},{58,-98},{33,26},{-74,-95},{22,30},{-68,-62},{-59,4},{-62,35},{-78,80},{-82,54},{-42,81},{56,-15},{32,-19},{34,93},{57,-100},{-1,-87},{68,-26},{18,86},{-55,-19},{-68,-99},{-9,47},{24,94},{92,97},{5,67},{97,-71},{63,-57},{-52,-14},{-86,-78},{-17,92},{-61,-83},{-84,-10},{20,13},{-68,-47},{7,28},{66,89},{-41,-17},{-14,-46},{-72,-91},{4,52},{-17,-59},{-85,-46},{-94,-23},{-48,-3},{-64,-37},{2,26},{76,88},{-8,-46},{-19,-68}};
        int[][] obstacles = {{75,61},{-27,-13},{-85,77},{-40,-30},{-71,-34},{41,-39},{73,-54},{-19,16},{76,50},{-12,-9},{-25,-100},{45,-86},{-43,-88},{50,-23},{-46,-89},{-66,91},{-57,-46},{-82,51},{78,98},{65,-61},{83,-14},{24,-17},{28,77},{-63,-3},{77,-39},{18,-63},{10,-91},{-11,-15},{-75,-80},{68,92},{21,-70},{91,-53},{-68,-64},{9,-68},{1,40},{-73,20},{56,15},{-90,-43},{-100,99},{-19,7},{14,76},{-80,-2},{24,-34},{47,7},{25,73},{-99,-39},{-55,-9},{85,31},{14,0},{-68,94},{-25,25},{44,-77},{-94,59},{92,-47},{40,5},{-68,-58},{87,39},{-43,93},{-83,-77},{-95,81},{82,37},{66,21},{-5,73},{-75,32},{30,70},{22,-68},{-27,31},{-91,80},{82,-58},{-95,-24},{15,22},{-10,38},{85,96},{68,26},{81,-18},{23,-47},{-80,-78},{30,18},{-56,4},{1,33},{-21,2},{-69,85},{41,92},{-72,79},{-48,-34},{-34,63},{48,-78},{17,73},{16,28},{-13,-14},{16,24},{11,-27},{44,52},{-78,67},{93,65},{-32,-33},{6,-2},{67,-100},{95,77},{-6,28},{10,81},{-45,48},{80,-34},{-49,46},{-38,17},{7,-81},{-29,52},{46,-82},{5,-71},{79,-87},{39,-82},{-78,-82},{-85,19},{74,-55},{22,45},{-40,-24},{44,97},{41,-21},{-17,-92},{17,49},{-1,-33},{39,-36},{37,-38},{41,-29},{72,-88},{-100,57},{-95,74},{-27,-16},{57,-34},{74,-85},{62,92},{44,0},{83,57},{90,96},{-65,70},{-58,99},{-70,-86},{75,-74},{-63,11},{-64,20},{-35,-40},{-86,-71},{-77,-62},{4,-95},{97,76},{36,-62},{-1,90},{99,91},{55,89},{80,77},{40,54},{79,-11},{44,-36},{-35,21},{-13,-86},{-55,84},{27,94},{74,91},{-77,-45},{-90,44},{-80,-35},{-38,80},{34,-28},{45,-77},{1,28},{-88,-50},{-100,87},{19,93},{-26,-39},{-83,-100},{-6,43},{89,42},{-35,-95},{-67,-96},{14,22},{-25,8},{-31,-9},{-94,48},{82,-3},{39,95},{44,47},{-62,-71},{73,-30},{92,-11},{2,85},{-91,97},{99,-18},{-57,-17},{57,73},{-41,9},{44,9},{17,-96},{-95,-16},{40,-3},{-48,-41},{95,18},{-34,-94},{15,-90},{42,11},{-65,-57}};
        System.out.println(robotSim(commands,obstacles));
    }

}
